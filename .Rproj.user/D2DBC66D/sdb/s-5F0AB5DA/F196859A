{
    "contents" : "require(tidyr)\nrequire(dplyr)\nrequire(ggplot2)\n\nsetwd(\"~/DataVisualization/DV_RProject3/01 Data\")\n\nfile_path <- \"2011_final_grade.csv\"\n\ndf <- read.csv(file_path, stringsAsFactors = FALSE)\n\n# Replace \".\" (i.e., period) with \"_\" in the column names.\nnames(df) <- gsub(\"\\\\.+\", \"_\", names(df))\nstr(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.\n\nmeasures <- c(\"DISTrictNUMBER\", \"SCHOOLNUMBER\", \"AEC_10\", \"Charter\", \"Online\", \"EMH_2lvl\", \"LT100pnts\", \"School_Grade\", \"rank_tot\", \"Overall_ACH_Grade\", \"Read_Ach_Grade\", \"Math_Ach_Grade\", \"Write_Ach_Grade\", \"Sci_Ach_Grade\", \"Overall_Weighted_Growth_Grade\", \"Read_Growth_Grade\", \"Math_Growth_Grade\", \"Write_Growth_Grade\", \"SPF_PS_IND_GRAD_RATE\")\n#measures <- NA # Do this if there are no measures.\n\n# Get rid of special characters in each column.\n# Google ASCII Table to understand the following:\nfor(n in names(df)) {\n  df[n] <- data.frame(lapply(df[n], gsub, pattern=\"[^ -~]\",replacement= \"\"))\n}\n\ndimensions <- setdiff(names(df), measures)\nif( length(measures) > 1 || ! is.na(dimensions)) {\n  for(d in dimensions) {\n    # Get rid of \" and ' in dimensions.\n    df[d] <- data.frame(lapply(df[d], gsub, pattern=\"[\\\"']\",replacement= \"\"))\n    # Change & to and in dimensions.\n    df[d] <- data.frame(lapply(df[d], gsub, pattern=\"&\",replacement= \" and \"))\n    # Change : to ; in dimensions.\n    df[d] <- data.frame(lapply(df[d], gsub, pattern=\":\",replacement= \";\"))\n  }\n}\n\nlibrary(lubridate)\n# Fix date columns, this needs to be done by hand because | needs to be correct.\n#                                                        \\_/\ndf$Order_Date <- gsub(\" [0-9]+:.*\", \"\", gsub(\" UTC\", \"\", mdy(as.character(df$Order_Date), tz=\"UTC\")))\ndf$Ship_Date  <- gsub(\" [0-9]+:.*\", \"\", gsub(\" UTC\", \"\", mdy(as.character(df$Ship_Date),  tz=\"UTC\")))\n\n# The following is an example of dealing with special cases like making state abbreviations be all upper case.\n# df[\"State\"] <- data.frame(lapply(df[\"State\"], toupper))\n\n# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions\nif( length(measures) > 1 || ! is.na(measures)) {\n  for(m in measures) {\n    df[m] <- data.frame(lapply(df[m], gsub, pattern=\"[^--.0-9]\",replacement= \"\"))\n  }\n}\n\nwrite.csv(df, paste(gsub(\".csv\", \"\", file_path), \".reformatted.csv\", sep=\"\"), row.names=FALSE, na = \"\")\n\ntableName <- gsub(\" +\", \"_\", gsub(\"[^A-z, 0-9, ]\", \"\", gsub(\".csv\", \"\", file_path)))\nsql <- paste(\"CREATE TABLE\", tableName, \"(\\n-- Change table_name to the table name you want.\\n\")\nif( length(measures) > 1 || ! is.na(dimensions)) {\n  for(d in dimensions) {\n    sql <- paste(sql, paste(d, \"varchar2(4000),\\n\"))\n  }\n}\nif( length(measures) > 1 || ! is.na(measures)) {\n  for(m in measures) {\n    if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, \"number(38,4),\\n\"))\n    else sql <- paste(sql, paste(m, \"number(38,4)\\n\"))\n  }\n}\nsql <- paste(sql, \");\")\ncat(sql)\n",
    "created" : 1444690207113.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "55|50|59|0|\n",
    "hash" : "2319913120",
    "id" : "F196859A",
    "lastKnownWriteTime" : 1444693039,
    "path" : "~/DataVisualization/DV_RProject3/01 Data/ETL_1.R",
    "project_path" : "01 Data/ETL_1.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}